version: '3.8'

# Định nghĩa một network chung cho tất cả các service để chúng có thể giao tiếp
networks:
  monitoring-net:
    driver: bridge

# Định nghĩa các volume để lưu trữ dữ liệu lâu dài, tránh mất mát khi container khởi động lại
volumes:
  prometheus_data:
  grafana_data:
  loki_data:
  alertmanager_data:
  app_logs: # Volume này dùng để chia sẻ file log giữa ml-api và promtail

services:
  # 1. Ứng dụng Machine Learning API của bạn
  ml-api:
    build:
      context: ../mlopslab2 # Đường dẫn tương đối đến thư mục chứa code và Dockerfile của app
    container_name: ml-api
    restart: unless-stopped
    ports:
      - "8888:8888"
    networks:
      - monitoring-net
    volumes:
      - app_logs:/src/logs # Ghi log của app vào volume chung 'app_logs'

  # 2. Prometheus - Thu thập và lưu trữ Metrics
  prometheus:
    image: prom/prometheus:3.4.1
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus.rules.yml:/etc/prometheus/prometheus.rules.yml # Load file quy tắc cảnh báo
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'
  
    networks:
      - monitoring-net
    depends_on:
      - ml-api
      - node-exporter

  # 3. Node Exporter - Thu thập metrics của hệ điều hành (CPU, RAM, Disk, Temp...)
  node-exporter:
    image: prom/node-exporter:v1.9.1
    container_name: node-exporter
    restart: unless-stopped
    pid: host
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
      - '--collector.thermal_zone'
      - '--collector.hwmon'
    networks:
      - monitoring-net

  # 4. Grafana - Trực quan hóa Metrics và Logs
  grafana:
    image: grafana/grafana-oss:12.0.1-security-01-ubuntu
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - monitoring-net
    depends_on:
      - prometheus
      - loki

  # 5. Loki - Thu thập và lưu trữ Logs
  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    volumes:
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - monitoring-net

  # 6. Promtail - Agent thu thập và gửi log đến Loki
  promtail:
    image: grafana/promtail:2.9.0
    container_name: promtail
    restart: unless-stopped
    volumes:
      - ./promtail-config.yml:/etc/promtail/config.yml
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/log:/var/log:ro
      - app_logs:/app-logs:ro # Đọc log từ volume chung 'app_logs'
    command: -config.file=/etc/promtail/config.yml
    networks:
      - monitoring-net
    depends_on:
      - loki

  # 7. Alertmanager - Xử lý và gửi cảnh báo
  alertmanager:
    image: prom/alertmanager:v0.28.1
    container_name: alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    networks:
      - monitoring-net
    depends_on:
      - prometheus
